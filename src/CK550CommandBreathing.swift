//
//  CK550CommandBreathing.swift
//  ck550-cli
//
//  Created by Michal Duda on 03/12/2018.
//  Copyright Â© 2018 Michal Duda. All rights reserved.
//

import Foundation

extension CK550Command {
    struct OffEffectOverride {
        struct Breathing {
            private struct SpeedBytes {
                static func bytes(speed: Speed) -> [uint8] {
                    switch speed {
                    case .lowest:
                        return [0x08, 0x01]
                    case .lower:
                        return [0x0A, 0x02]
                    case .middle:
                        return [0x0C, 0x04]
                    case .higher:
                        return [0x07, 0x04]
                    case .highest:
                        return [0x09, 0x09]
                    }
                }
            }

            enum Speed {
                case lowest, lower, middle, higher, highest
            }

// swiftlint:disable identifier_name
            static var setEffectUNKNOWN_BEFORE_PACKETS: [uint8] {
                return CK550Command.newCommand(request: [0x56, 0x81, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x88, 0x88, 0x88, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00])
            }
// swiftlint:enable identifier_name

            static func setEffect(speed: Speed, color: RGBColor? = nil) -> [[uint8]] {
                var result: [[uint8]] = [
                    [0x56, 0x83, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0xC1, 0x08, 0x00, 0x00, 0x00, 0xFE, 0xFD, 0xFC, 0xFF, 0x03, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]
                ]

                if let color = color {
                    result[0][16] = UInt8(color.red)
                    result[0][17] = UInt8(color.green)
                    result[0][18] = UInt8(color.blue)
                    result[0][20] = 0x01
                } else {
                    result[0][16] = 0xFE
                    result[0][17] = 0xFD
                    result[0][18] = 0xFC
                    result[0][20] = 0x03
                }

                let bytes = SpeedBytes.bytes(speed: speed)
                result[0][12] = bytes[0]
                result[0][22] = bytes[1]

                return result
            }
        }
    }
}
